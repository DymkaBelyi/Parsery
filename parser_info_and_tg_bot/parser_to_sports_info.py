import requests
from bs4 import BeautifulSoup
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackQueryHandler
import logging
import os
from dotenv import load_dotenv

import Pars.Parsery.parser_info_and_tg_bot.keyboards as kb


load_dotenv()
TOKEN = os.getenv("TOKEN")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏)
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)


# –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
def get_news(category):
    url = f"https://news.sportbox.ru/Vidy_sporta/{category}"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 "
                      "(KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36"
    }

    response = requests.get(url, headers=headers)
    soup = BeautifulSoup(response.text, "html.parser")

    news_items = soup.find("ul", class_="list").find_all("li", limit=5)  # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ 5 –Ω–æ–≤–æ—Å—Ç–µ–π
    news_list = []

    for item in news_items:
        link = f"https://news.sportbox.ru{item.find('a')['href']}"
        title = item.find('a', class_='title').text.strip()
        news_list.append(f"üîπ <b>{title}</b>\nüîó {link}")
    return "\n\n".join(news_list) if news_list else "–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã üò¢"


# –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞
async def start(update: Update, context):
    await update.message.reply_text("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=kb.sports_category)


# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π)
async def handle_button(update: Update, context):
    query = update.callback_query
    news = get_news(query.data)

    await query.answer()
    await query.message.reply_text(news, parse_mode="HTML", disable_web_page_preview=True, reply_markup=kb.sports_category)


# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))  # –ö–æ–º–∞–Ω–¥–∞ /start
    app.add_handler(CallbackQueryHandler(handle_button))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling(drop_pending_updates=True)


if __name__ == "__main__":
    main()
